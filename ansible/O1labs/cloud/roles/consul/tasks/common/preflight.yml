---
- name: Include OS and distribution specific variables.
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
      skip: true
  tags:
    - preflight

- name: Check for uninstall signal
  when: perform_uninstall
  block:
    - name: Broadcast uninstall signal
      command: /bin/true
      notify:
        - Uninstall service
  always:
    - name: Ensure flush of handlers
      meta: flush_handlers
    - name: End play following uninstallation
      meta: end_play
  tags:
    - preflight

- name: Set extra archive extraction arguments based on type
  when: install_type == 'archive' and archive_url | basename | regex_search('(zip$)', ignorecase=True)
  package:
    name: unzip
    state: present

- name: Set extra archive extraction arguments if tar type
  when: install_type == 'archive' and not archive_url | basename | regex_search('(zip$)', ignorecase=True)
  set_fact:
    archive_options:
      - --strip-components
      - '1'

- name: Ensure install of epel-release
  become: true
  when: install_type == 'source' and ansible_os_family|lower == "redhat"
  package:
    name: 'epel-release'
    state: present
  tags:
    - preflight

- name: Update system packages
  become: true
  when: go_autoinstall and install_type == 'source' and ansible_os_family|lower == "redhat"
  yum:
    name: "*"
    state: latest
  tags:
    - preflight

- name: Update apt packages
  become: true
  when: go_autoinstall and install_type == 'source' and ansible_os_family|lower == "debian"
  apt:
    upgrade: 'yes'
    update_cache: 'yes'
  tags:
    - preflight

- name: Download and extract Go-lang
  become: true
  when: go_autoinstall and install_type == 'source'
  unarchive:
    src: "{{ go_url }}"
    dest: "{{ go_install_dir }}"
    mode: '0775'
    remote_src: 'yes'
  tags:
    - preflight

- name: Update system dependencies
  become: true
  when: install_type == 'source'
  package:
    name: "{{ system_dependencies }}"
    state: present
  tags:
    - preflight

- name: Create a symbolic link to {{ exe_dir }}
  become: true
  when: go_autoinstall and install_type == 'source'
  file:
    src: "{{ go_install_dir }}/go/bin/go"
    dest: "{{ exe_dir }}/go"
    state: link
  tags:
    - preflight
